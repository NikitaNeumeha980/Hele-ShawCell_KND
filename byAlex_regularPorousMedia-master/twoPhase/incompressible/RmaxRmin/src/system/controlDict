/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.6;

deltaT          1e-8;

writeControl    adjustableRunTime;

writeInterval   0.0025;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   8;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.5;
maxAlphaCo      0.1;

maxDeltaT       $writeInterval;

libs (
    "libOpenFOAM.so"
    "libadaptiveTotalPressure.so"
);

functions
{
    /*CodeStream section*/
    #includeFunc    residuals
    #includeFunc    flowRatePatch(name=inlet)
    #includeFunc    flowRatePatch(name=outlet)

    #include    "flowRateLUFO"
    #include    "averageSaturationLUFO"

    /*Function objects*/
    massFlowRate1
    {
        type            massFlowRate;
        libs            ("libuserUtilityFunctionObjects.so");

        writeControl    adjustableRunTime;
        writeInterval   $writeInterval;

        phi             rhoPhi;
        patches         (inlet outlet);
    }

    volumetricFlowRate1
    {
        type            volumetricFlowRate;
        libs            ("libuserUtilityFunctionObjects.so");

        writeControl    adjustableRunTime;
        writeInterval   $writeInterval;

        phi             rhoPhi;
        patches         (inlet outlet);
    }

    saturation1
    {
        type            saturation;
        libs            ("libuserUtilityFunctionObjects.so");

        writeControl    adjustableRunTime;
        writeInterval   $writeInterval;
	}
}

// ************************************************************************* //

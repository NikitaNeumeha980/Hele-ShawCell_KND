/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

t_0             0.5;

application     interFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

// endTime         5.0;

endTime         #codeStream
{
    code
    #{
        scalar
            t_0 = readScalar(dict.lookup("t_0"));

        os  << (t_0 + 5.0);
    #};
};

deltaT          1e-6;

writeControl    adjustableRunTime;

writeInterval   1e-3;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   8;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.25;
maxAlphaCo      0.1;

maxDeltaT       $writeInterval;

libs (
    "libOpenFOAM.so"
);

functions
{
    /*CodeStream section*/
    #includeFunc    residuals
    #includeFunc    flowRatePatch(name=left)
//     #includeFunc    flowRatePatch(name=bottom)
    #includeFunc    flowRatePatch(name=right)
//     #includeFunc    flowRatePatch(name=top)

//     #include    "flowRateLUFO"
//     #include    "averageSaturationLUFO"

    /*Function objects*/
//     massFlowRate1
//     {
//         type            massFlowRate;
//         libs            ("libuserUtilityFunctionObjects.so");
// 
//         writeControl    adjustableRunTime;
//         writeInterval   $writeInterval;
// 
//         phi             rhoPhi;
//         patches         (inlet outlet);
//     }
// 
//     volumetricFlowRate1
//     {
//         type            volumetricFlowRate;
//         libs            ("libuserUtilityFunctionObjects.so");
// 
//         writeControl    adjustableRunTime;
//         writeInterval   $writeInterval;
// 
//         phi             rhoPhi;
//         patches         (inlet outlet);
//     }
// 
//     saturation1
//     {
//         type            saturation;
//         libs            ("libuserUtilityFunctionObjects.so");
// 
//         writeControl    adjustableRunTime;
//         writeInterval   $writeInterval;
// 	}
}

// ************************************************************************* //
